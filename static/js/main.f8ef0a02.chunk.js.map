{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","MyLoader/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","toggleCompleteTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","e","target","console","log","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","calue","type","MyLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","style","x","y","rx","ry","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.f8ef0a02.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useLocalStorage } from './useLocalStorage'\r\n\r\nconst TodoContext = React.createContext()\r\n\r\nfunction TodoProvider(props) {\r\n\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n    } = useLocalStorage('TODOS_V1', [])\r\n\r\n    const [searchValue, setSearchValue] = React.useState('')\r\n    const [openModal, setOpenModal] = React.useState(false)\r\n\r\n\r\n    const completedTodos = todos.filter(todo => todo.completed).length // cuento los todos completados\r\n    const totalTodos = todos.length // cuanto los todos totales\r\n\r\n    let searchedTodos = []\r\n\r\n    if (!searchValue.length >= 1) {\r\n        searchedTodos = todos\r\n    } else {\r\n        searchedTodos = todos.filter(todo => {\r\n            const todoText = todo.text.toLowerCase()\r\n            const searchText = searchValue.toLowerCase()\r\n            return todoText.includes(searchText)\r\n        })\r\n    }\r\n\r\n    const toggleCompleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text) // para encontrar el index de la tarea\r\n        const newTodos = [...todos]\r\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed // de esta forma se comporta como un switch, que alterna entre completado y no completado\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log('use effect prro');\r\n    // }, [totalTodos])\r\n\r\n    const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text) // para encontrar el index de la tarea\r\n        const newTodos = [...todos]\r\n        newTodos.splice(todoIndex, 1) // le indico desde que posicion quiero eliminar el elemento del array y cauntos elementos\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos]\r\n        newTodos.push({\r\n            completed: false,\r\n            text\r\n        })\r\n        saveTodos(newTodos)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            completedTodos,\r\n            totalTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            toggleCompleteTodo,\r\n            deleteTodo,\r\n            addTodo,\r\n            openModal,\r\n            setOpenModal,\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport { TodoContext, TodoProvider }\r\n","import React from 'react'\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false)\r\n    const [loading, setLoading] = React.useState(true)\r\n    const [item, setItem] = React.useState(initialValue)\r\n\r\n    React.useEffect(() => { // todo este bloque de codigo se va a caragr una sola vez al renderizar por primera vez la app\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName) // tratamos de obtener del localStorage lo que queremos\r\n                let parsedItem\r\n\r\n                if (!localStorageItem) { // verificamos si el localStorage no existe y lo creamos\r\n                    localStorage.setItem(itemName, JSON.stringify(initialValue)) // el primer argumento es la key y en el segundo argumento convertimos a string el valor\r\n                    parsedItem = initialValue\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem) // si ya existe lo parseamos para leerlo\r\n                }\r\n                setItem(parsedItem)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(error)\r\n            }\r\n        }, 1000)\r\n    })\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            localStorage.setItem(itemName, JSON.stringify(newItem))\r\n            setItem(newItem)\r\n        } catch {\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n    return {// si retornamos 2 estados, lo retornamos como array, si hay mas, un objeto \r\n        item,\r\n        saveItem,\r\n        loading,\r\n        error,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport { useLocalStorage }\r\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext)\n  return (\n    <h2 className=\"TodoCounter\">{completedTodos} de {totalTodos} tareas completadas</h2>\n  );\n}\n\nexport { TodoCounter };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext)\n  function onSearchValueChange(e) {\n    setSearchValue(e.target.value)\n    console.log(e.target.value);\n  }\n\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Buscar Tarea\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n\n\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        <i className=\"fas fa-check\"></i>\n\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        <i className=\"fas fa-times-circle\"></i>\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n\n  const onClickButton = () => {\n    // props.setOpenModal(prevState => !prevState) // Una forma que acabo de aprender xd\n    props.setOpenModal(!props.openModal) // cambia entre true y false\n  }\n\n  return (\n    <button\n      className=\"CreateTodoButton\"\n      onClick={onClickButton}\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css'\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    )\r\n}\r\n\r\nexport { Modal }","import React from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm(props) {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('')\r\n    const {\r\n        addTodo,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext)\r\n\r\n    const onChange = (e) => {\r\n        setNewTodoValue(e.target.value)\r\n    }\r\n    const onCancel = () => {\r\n        setOpenModal(false)\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTodo(newTodoValue)\r\n        setOpenModal(false)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label>Agregar nueva tarea</label>\r\n            <textarea\r\n                calue={newTodoValue}\r\n                placeholder=\"Bañar a los perros y gatos\"\r\n                onChange={onChange}\r\n            />\r\n            <div className=\"TodoForm-buttonContainer\">\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={onCancel}\r\n                    className=\"TodoForm-button TodoForm-button-cancel\"\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"TodoForm-button TodoForm-button-add\"\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { TodoForm }\r\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst MyLoader = (props) => (\r\n    <ContentLoader\r\n        speed={2}\r\n        width={476}\r\n        height={124}\r\n        viewBox=\"0 0 476 124\"\r\n        backgroundColor=\"#bfbbbb\"\r\n        foregroundColor=\"#ecebeb\"\r\n        style={{ width: '100%' }}\r\n        {...props}\r\n    >\r\n        <rect x=\"0\" y=\"29\" rx=\"0\" ry=\"0\" width=\"715\" height=\"48\" />\r\n    </ContentLoader>\r\n)\r\n\r\nexport { MyLoader }\r\n","import React from 'react'\r\nimport { TodoCounter } from '../TodoCounter';\r\nimport { TodoSearch } from '../TodoSearch';\r\nimport { TodoList } from '../TodoList';\r\nimport { TodoItem } from '../TodoItem';\r\nimport { CreateTodoButton } from '../CreateTodoButton';\r\nimport { TodoContext } from '../TodoContext'\r\nimport { Modal } from '../Modal'\r\nimport { TodoForm } from '../TodoForm';\r\nimport { MyLoader } from '../MyLoader'\r\n\r\n\r\nfunction AppUI() {\r\n    const {\r\n        error,\r\n        loading,\r\n        searchedTodos,\r\n        toggleCompleteTodo,\r\n        deleteTodo,\r\n        openModal,\r\n        setOpenModal,\r\n    } = React.useContext(TodoContext)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TodoCounter />\r\n            <TodoSearch />\r\n\r\n            <TodoList>\r\n                {error && <p>Ocurrio un error, culpa de chimper </p>}\r\n                {loading && <MyLoader />}\r\n                {(!loading && !searchedTodos.length) && <p>Todo cargado GG 🅱️</p>}\r\n                {searchedTodos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.text}\r\n                        text={todo.text}\r\n                        completed={todo.completed}\r\n                        onComplete={() => toggleCompleteTodo(todo.text)}\r\n                        onDelete={() => deleteTodo(todo.text)}\r\n                    />\r\n                ))}\r\n            </TodoList>\r\n\r\n            {openModal && ( // esto pregunta si openModal existe y si es true \r\n                <Modal>\r\n                    <TodoForm\r\n                        setOpenModal={setOpenModal}\r\n                        openModal={openModal}\r\n                    />\r\n                </Modal>\r\n            )}\r\n\r\n            <CreateTodoButton\r\n                setOpenModal={setOpenModal}\r\n                openModal={openModal}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport { AppUI }\r\n","import React from 'react';\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext'\n\n// const defaultTodos = [\n//   { text: 'Pasear a Pinchito', completed: false },\n//   { text: 'Bañar perro viejo', completed: false },\n//   { text: 'Dar de comer a raul', completed: false },\n//   { text: 'Retar al beibis', completed: false },\n//   { text: 'Ignorar al negrito', completed: false },\n// ];\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.js';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}